@page "/"
@using System.Text.Json
@using CuteSocialCards.Components
@using CuteSocialCards.Data
@inject IJSRuntime JS

<ThemeSwitcher />

<main>
    <h1>Personal Profile Card</h1>

    <div class="editor">
        <input type="text" @bind="Profile.Name" placeholder="Your name" />
        <input type="text" @bind="Profile.Bio" placeholder="Short bio" />
        <input type="text" @bind="Profile.Social.Twitter" placeholder="Twitter link" />
        <input type="text" @bind="Profile.FavoriteGame" placeholder="Favorite Game" />
        <input type="text" @bind="Profile.FavoriteSong" placeholder="Favorite Song" />
    </div>

    <ProfileCard Profile="Profile" />

    <div style="margin-top: 1.5rem; display: flex; gap: 10px;">
        <button @onclick="SaveToLocalStorage">💾 Save</button>
        <button @onclick="LoadFromLocalStorage">📂 Load</button>
        <button @onclick="DownloadCard">🖼️ Download</button>
    </div>
</main>


@code {
    private UserProfile Profile = new();

    private async Task SaveToLocalStorage()
    {
        string json = JsonSerializer.Serialize(Profile);
        await JS.InvokeVoidAsync("localStorage.setItem", "userProfile", json);
    }

    private async Task LoadFromLocalStorage()
    {
        var json = await JS.InvokeAsync<string>("localStorage.getItem", "userProfile");
        if (!string.IsNullOrWhiteSpace(json))
        {
            Profile = JsonSerializer.Deserialize<UserProfile>(json) ?? new();
        }
    }

    // This method is called when the component is initialized.
    // It's a good place to load existing data automatically.
    protected override async Task OnInitializedAsync()
    {
        await LoadFromLocalStorage();
    }

    private async Task DownloadCard()
    {
        await JS.InvokeVoidAsync("downloadCardAsImage", "profileCard");
    }
}